graph = {
    'Ростик': ['Настя', 'Костя', 'Катя'],
    'Костя': ['Катя', 'Кирилл', 'Виталя'],
    'Виталя': ['Кирилл', 'Костя'],
    'Катя': ['Костя', 'Ростик', 'Хамза'],
    'Хамза': ['Катя', 'Дима'],
    'Дима': ['Влад', 'Хамза', 'Серёжа'],
    'Влад': ['Дима', 'Кирилл'],
    'Серёжа': ['Дима', 'Хамза', 'Лена', 'Костя', 'Катя', 'Влад', 'Виталя'],
    'Лена': ['Настя'],
    'Кирилл': ['Костя', 'Виталя'],
    'Настя': ['Лена', 'Серёжа']
}

friends = {
    'Ростик': '23',
    'Костя': '20',
    'Виталя': '22',
    'Катя': '20',
    'Хамза': '20',
    'Дима': '21',
    'Настя': '22',
    'Лена': '22',
    'Серёжа': '21',
    'Кирилл': '23',
    'Влад': '23',
}


visited = []  # List for visited nodes.
queue = []  # Initialize a queue


def bfs(visited, graph, node, x):
    visited.append(node)
    queue.append(node)

    while queue:
        m = queue.pop(0)
        # print(m, end=" ")
        if m == x:  # добавление для задачи
            print(m, 'учится в', friends[m], 'группе')
            return

        for neighbour in graph[m]:
            if neighbour not in visited:
                visited.append(neighbour)
                queue.append(neighbour)


print("Ростик поинтересовался у своих друзей, не знают ли они, в какой группе учится Дима.")
bfs(visited, graph, 'Ростик', 'Дима')
